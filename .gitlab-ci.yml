stages:
  - build

before_script:
  - apt update -y && apt install git -y
  - git clone https://github.com/TheThingsNetwork/lora_gateway.git
  # Creating release path
  - mkdir release
  - export RELEASE_PATH="$PWD/release"
  - export ROOT_FOLDER="$PWD"

multitech-conduit-golang:
  stage: build
  image: registry.gitlab.com/thethingsnetwork/packet_forwarder/multitech-toolchain
  script:
    - sed -i.bak 's/CFG_SPI.*/CFG_SPI=ftdi/g' lora_gateway/libloragw/library.cfg
    - sed -i.bak2 's/PLATFORM.*/PLATFORM=multitech/g' lora_gateway/libloragw/library.cfg
    - pushd go
    # Go build environment variables
    - export GOROOT=$PWD/go
    - export GOPATH=$PWD/gopath
    - export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
    # Downloading go if not installed yet
    - apt install make git tar wget -y
    - apt-get install wget -y && wget https://storage.googleapis.com/golang/go1.8.1.linux-amd64.tar.gz && tar -C $PWD -xvzf go1.8.1.linux-amd64.tar.gz
    # Enable mLinux toolchain
    - sdk_enable_file=$(ls /opt/mlinux/*/*setup*)
    - source $sdk_enable_file
    # Compile libloragw
    - pushd ../lora_gateway/libloragw
    - make all
    - popd
    # Go to packet forwarder file
    - CGO_ENABLED=1 GOARCH=arm GOARM=5 go build -o benchmark-go -v
    - cp benchmark "$RELEASE_PATH"
    - popd
  artifacts:
    paths:
      - release/

multitech-conduit-c:
  stage: build
  image: registry.gitlab.com/thethingsnetwork/packet_forwarder/multitech-toolchain
  script:
    - apt install make -y
    # Enable mLinux toolchain
    - sdk_enable_file=$(ls /opt/mlinux/*/*setup*)
    - source $sdk_enable_file
    # Compile libloragw
    - pushd $ROOT_FOLDER/lora_gateway/libloragw
    - make all
    - popd
    # Compile benchmark
    - pushd c
    - $CC -I$ROOT_FOLDER/lora_gateway/libloragw/inc benchmark.c -L$ROOT_FOLDER/lora_gateway/libloragw -lloragw -o "$RELEASE_PATH/benchmark-c"
    - popd
  artifacts:
    paths:
      - release/
